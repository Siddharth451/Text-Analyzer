{"version":3,"sources":["reportWebVitals.js","components/NavBar.js","components/Form.js","components/About.js","components/Alert.js","components/app.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","NavBar","props","className","mode","to","tittle","type","id","class","onClick","toggleMode","for","Form","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","small","toLowerCase","copyText","document","getElementById","select","setSelectionRange","newText1","split","join","length","About","lightmode","darkmode","btn","setbtn","Alert","alert","role","message","App","Setmode","setAlert","setTimeout","body","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.efd174b5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nfunction NavBar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">{props.tittle}</Link>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/About\">About</Link>\r\n              </li>\r\n        \r\n  \r\n              </ul>\r\n              <form class=\"d-flex\">\r\n              <div class={`form-check form-switch text-${props.mode === 'light' ? 'dark':'light'}`}>\r\n                <input class=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Enable to {props.mode==='light'?'dark':'light'} mode</label>\r\n              </div>\r\n              </form>\r\n    \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n}\r\nexport default NavBar;","import React, { useState } from 'react';\r\n\r\nexport default function Form(props) {\r\n    const changeToUppercase = ()=> {\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n    const handleOnChange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const changeToLowerrcase=()=>{\r\n        let small=text.toLowerCase();\r\n        setText(small);\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n    function clear(){\r\n        let clearText='';\r\n        setText(clearText);\r\n    }\r\n    const textaaCopy=()=>{\r\n        var copyText = document.getElementById(\"mybox\");\r\n  /* Select the text field */\r\n  copyText.select();\r\n  copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n  /* Alert the copied text */\r\n  props.showAlert(\"Text copied\",\"success\");\r\n    }\r\n    const removeText=()=>{\r\n        let newText1=text.split(/[ ]+/);\r\n        setText(newText1.join(\" \"));\r\n        props.showAlert(\" Extra space removed\",\"success\");\r\n    }\r\n    const[text, setText] = useState('');\r\n    return (\r\n        <>\r\n    <div className=\"container\">\r\n        <h1 style={{color:props.mode==='light'?'black':'white'}}>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" id=\"mybox\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'grey'}} rows=\"8\"></textarea>\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-secondary mx-2\" onClick={changeToUppercase}>Convert to UpperCase</button>\r\n        <button type=\"button\" className=\"btn btn-secondary mx-2\" onClick={changeToLowerrcase}>Convert to LowerCase</button>\r\n        <button type=\"button\" className=\"btn btn-secondary mx-2\" onClick={clear}>Clear</button>\r\n        <button type=\"button\" className=\"btn btn-secondary mx-2\" onClick={textaaCopy}>Copy</button>\r\n        <button type=\"button\" className=\"btn btn-secondary mx-2\" onClick={removeText}>Remove Extra space</button>\r\n        \r\n        \r\n\r\n    </div>\r\n    <div className=\"container my-3\">\r\n        <h1 style={{color:props.mode==='light'?'black':'white'}}>Your text Summary</h1>\r\n        <p style={{color:props.mode==='light'?'black':'white'}}>{text.split(\" \").length} Words and {text.length} characters</p>\r\n        <p>{0.008*text.split(\" \").length} Minutes Read</p>\r\n        <h2 style={{color:props.mode==='light'?'black':'white'}}>Preview</h2>\r\n        <p style={{color:props.mode==='light'?'black':'white'}}>{text}</p>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport default function About() {\r\n    const [lightmode, darkmode] = useState({\r\n        color: 'blue',\r\n        backgroundColor: 'white'\r\n    });\r\n    const [btn, setbtn] = useState(\"Enable Dark Mode\");\r\n    const toggle = () => {\r\n        if (lightmode.backgroundColor === 'white') {\r\n            darkmode({\r\n                color: 'white',\r\n                backgroundColor: 'black'\r\n            })\r\n            setbtn(\"Enable Light Mode\");\r\n        }\r\n        else {\r\n            darkmode({\r\n                color: 'blue',\r\n                backgroundColor: 'white'\r\n            })\r\n            setbtn(\"Enable Dark Mode\");\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h1>About us </h1>\r\n            <div className=\"container my-3\">\r\n                <div class=\"card\" style={lightmode}>\r\n                    <div class=\"card-body\">\r\n                        Free software utility which allows you to find the most frequent phrases and frequencies of words. Non-English language texts are supported. It also counts number of words, characters, sentences and syllables.\r\n                    </div>\r\n                    <div class=\"form-check form-switch\">\r\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={toggle}/>\r\n                        <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\"  >{btn}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n       props.alert && <div>\r\n            <div class={`alert alert-${props.alert.type} alert-dismissible fade show `} role=\"alert\">\r\n          <strong>{props.alert.type} </strong>: {props.alert.message}\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport NavBar from './NavBar';\r\nimport Form from './Form';\r\nimport About from './About';\r\nimport Alert from './Alert';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n    const [mode, Setmode] = useState('light')\r\n\r\n    const [alert, setAlert] = useState(null);\r\n    const showAlert = (message, type) => {\r\n        setAlert({\r\n            message: message,\r\n            type: type\r\n        })\r\n        setTimeout(() => {\r\n            setAlert(null);\r\n        }, 1500);\r\n    }\r\n\r\n    const toggleMode = () => {\r\n        if (mode === 'light') {\r\n            Setmode('dark');\r\n            document.body.style.backgroundColor = '#042743';\r\n            showAlert(\"Dark mode has been enabled\", \"success\");\r\n        }\r\n        else {\r\n            Setmode('light');\r\n            document.body.style.backgroundColor = 'white';\r\n            showAlert(\"Light mode has been enabled\", \"success\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <NavBar tittle=\"TextUtil\" mode={mode} toggleMode={toggleMode} />\r\n                <Alert alert={alert} />\r\n                <div className=\"container my-4\">\r\n                    <Switch>\r\n                    <Route path=\"/about\">\r\n                    <About />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                    <Form heading=\"Enter the text to analyze below\" showAlert={showAlert}mode={mode}/>\r\n                    </Route>\r\n                    </Switch>\r\n                </div>\r\n        </Router>\r\n        </>\r\n    )\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Header from './components/NavBar'\nimport App from './components/app';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}